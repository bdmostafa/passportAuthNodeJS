// For keys.js
module.exports = {
    MongoURI: 'mongodb+srv://(username):(password)@clusterpassauthnode-je7mc.mongodb.net/test?retryWrites=true&w=majority'
}


// For passport.js
const PassportLocalStrategy = require('passport-local').Strategy;
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');

// Local User Model
const User = require('../models/User');

module.exports = function(passport) {
    passport.use(
        new PassportLocalStrategy({ usernameField: 'email' }, (email, password, done) => {
            // Match User
            User.findOne({ email: email })
                .then(user => {
                    if(!user){
                        return done(null, false, {message: 'That email is not registered'})
                    }
                    // Match password
                    bcrypt.compare(password, user.password, (err, isMatch) => {
                        if(err) throw err;

                        if(isMatch) {
                            return done(null, user);
                        } else {
                            return done (null, false, { message: 'Password incorrect' })
                        }
                    });
                })
                .catch(err => console.log(err));
        })
    );

    // Session serialize/ deserialize
    passport.serializeUser(function(user, done) {
        done(null, user.id);
    });
      
      passport.deserializeUser(function(id, done) {
        User.findById(id, function(err, user) {
          done(err, user);
        });
    });
}


// For auth.js
module.exports = {
    ensureAuthenticated: function(req, res, next) {
        if(req.isAuthenticated()){
            return next();
        }
        req.flash('error_msg', 'Please log in to view this resource');
        res.redirect('users/login');
    }
}
